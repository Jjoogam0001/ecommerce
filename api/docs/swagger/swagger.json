{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API E-Commerce businesses.",
        "title": "Martsoft Inc E-Commerce API 2.0",
        "contact": {
            "name": "Martsoft Inc",
            "email": "Martsoftfilmz@gmail.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/customers/delete_customer": {
            "delete": {
                "description": "Deletes a single customer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Deletes a single customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "customer_number mandatory",
                        "name": "customer_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/customers/get_customer": {
            "get": {
                "description": "Fetch a single customer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Retrieve a single customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "customer_number mandatory",
                        "name": "customer_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/customers/get_customers": {
            "get": {
                "description": "Gets all customers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Retrieve all customers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/employees/delete_employee": {
            "delete": {
                "description": "deleted a single Employee",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "deletes a single Employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "employee_number mandatory",
                        "name": "employee_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/employees/get_employee": {
            "get": {
                "description": "Fetch a single Employee",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Retrieve a single Employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "employee_number mandatory",
                        "name": "employee_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/employees/get_employees": {
            "get": {
                "description": "Gets all Employees",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Retrieve all Employees",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/offices/delete_office": {
            "delete": {
                "description": "Deletes a single Office",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Offices"
                ],
                "summary": "Deletes a single Office",
                "parameters": [
                    {
                        "type": "string",
                        "description": "office_code mandatory",
                        "name": "office_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Office"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/offices/get_office": {
            "get": {
                "description": "Fetch a single Office",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Offices"
                ],
                "summary": "Retrieve a single Office",
                "parameters": [
                    {
                        "type": "string",
                        "description": "office_code mandatory",
                        "name": "office_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Office"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/offices/get_offices": {
            "get": {
                "description": "Gets all Offices",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Offices"
                ],
                "summary": "Retrieve all Offices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Office"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/orderDetails/delete_orderDetail": {
            "delete": {
                "description": "Delete order details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Delete order details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "order_number mandatory",
                        "name": "order_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/orderDetails/get_orderDetail": {
            "get": {
                "description": "Fetch order details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Retrieve order details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "order_number mandatory",
                        "name": "order_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/orderDetails/get_orderDetails": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderDetails"
                ],
                "summary": "Retrieve all OrderDetails",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OrderDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/orders/get_orders": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Retrieve all Orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/payments/delete_payment": {
            "delete": {
                "description": "deletes a Payment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "deletes a  Payment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "customer_number mandatory",
                        "name": "customer_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/payments/get_payment": {
            "get": {
                "description": "Fetch a Payment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Retrieve a  Payment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "customer_number mandatory",
                        "name": "customer_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/payments/get_payments": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Retrieve all Payments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/productLines/get_productLines": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductLines"
                ],
                "summary": "Retrieve all ProductLines",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProductLine"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/products/delete_product": {
            "delete": {
                "description": "Deletes a single Product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Deletes a single Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product_code mandatory",
                        "name": "product_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/products/get_product": {
            "get": {
                "description": "Fetch a single Product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve a single Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product_code mandatory",
                        "name": "product_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        },
        "/products/get_products": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve all Payments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrValidation"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Customer": {
            "type": "object",
            "properties": {
                "address_line": {
                    "type": "string"
                },
                "address_line2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "contact_first_name": {
                    "type": "string"
                },
                "contact_last_name": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "credit_limit": {
                    "type": "integer"
                },
                "customer_name": {
                    "type": "string"
                },
                "customer_number": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "sales_rep_employee_number": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "model.Employee": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "employee_number": {
                    "type": "integer"
                },
                "extension": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "job_title": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "office_code": {
                    "type": "string"
                },
                "reports_to": {
                    "type": "integer"
                }
            }
        },
        "model.ErrValidation": {
            "type": "object",
            "properties": {
                "invalid_params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InvalidParam"
                    }
                }
            }
        },
        "model.InvalidParam": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "model.Office": {
            "type": "object",
            "properties": {
                "address_line": {
                    "type": "string"
                },
                "address_line2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "office_code": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "territory": {
                    "type": "string"
                }
            }
        },
        "model.Order": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "customer_number": {
                    "type": "integer"
                },
                "order_date": {
                    "$ref": "#/definitions/pgtype.Date"
                },
                "order_number": {
                    "type": "integer"
                },
                "required_date": {
                    "$ref": "#/definitions/pgtype.Date"
                },
                "shipped_date": {
                    "$ref": "#/definitions/pgtype.Date"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.OrderDetail": {
            "type": "object",
            "properties": {
                "order_line_number": {
                    "type": "integer"
                },
                "order_number": {
                    "type": "integer"
                },
                "price_each": {
                    "type": "string"
                },
                "product_code": {
                    "type": "string"
                },
                "quantity_ordered": {
                    "type": "integer"
                }
            }
        },
        "model.Payment": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "check_number": {
                    "type": "string"
                },
                "customer_number": {
                    "type": "integer"
                },
                "payment_date": {
                    "$ref": "#/definitions/pgtype.Date"
                }
            }
        },
        "model.Product": {
            "type": "object",
            "properties": {
                "buy_price": {
                    "type": "number"
                },
                "msrp": {
                    "type": "number"
                },
                "product_code": {
                    "type": "string"
                },
                "product_description": {
                    "type": "string"
                },
                "product_line": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "product_scale": {
                    "type": "string"
                },
                "product_vendor": {
                    "type": "string"
                },
                "quantity_in_stock": {
                    "type": "integer"
                }
            }
        },
        "model.ProductLine": {
            "type": "object",
            "properties": {
                "html_description": {
                    "type": "string"
                },
                "image": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "product_line": {
                    "type": "string"
                },
                "text_description": {
                    "type": "string"
                }
            }
        },
        "pgtype.Date": {
            "type": "object",
            "properties": {
                "infinityModifier": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        }
    }
}