definitions:
  model.Customer:
    properties:
      address_line:
        type: string
      address_line2:
        type: string
      city:
        type: string
      contact_first_name:
        type: string
      contact_last_name:
        type: string
      country:
        type: string
      credit_limit:
        type: integer
      customer_name:
        type: string
      customer_number:
        type: integer
      phone:
        type: string
      postal_code:
        type: string
      sales_rep_employee_number:
        type: integer
      state:
        type: string
    type: object
  model.Employee:
    properties:
      email:
        type: string
      employee_number:
        type: integer
      extension:
        type: string
      first_name:
        type: string
      job_title:
        type: string
      last_name:
        type: string
      office_code:
        type: string
      reports_to:
        type: integer
    type: object
  model.ErrValidation:
    properties:
      invalid_params:
        items:
          $ref: '#/definitions/model.InvalidParam'
        type: array
    type: object
  model.InvalidParam:
    properties:
      name:
        type: string
      reason:
        type: string
    type: object
  model.Office:
    properties:
      address_line:
        type: string
      address_line2:
        type: string
      city:
        type: string
      country:
        type: string
      office_code:
        type: string
      phone:
        type: string
      postal_code:
        type: string
      state:
        type: string
      territory:
        type: string
    type: object
  model.Order:
    properties:
      comments:
        type: string
      customer_number:
        type: integer
      order_date:
        $ref: '#/definitions/pgtype.Date'
      order_number:
        type: integer
      required_date:
        $ref: '#/definitions/pgtype.Date'
      shipped_date:
        $ref: '#/definitions/pgtype.Date'
      status:
        type: string
    type: object
  model.OrderDetail:
    properties:
      order_line_number:
        type: integer
      order_number:
        type: integer
      price_each:
        type: string
      product_code:
        type: string
      quantity_ordered:
        type: integer
    type: object
  model.Payment:
    properties:
      amount:
        type: number
      check_number:
        type: string
      customer_number:
        type: integer
      payment_date:
        $ref: '#/definitions/pgtype.Date'
    type: object
  model.Product:
    properties:
      buy_price:
        type: number
      msrp:
        type: number
      product_code:
        type: string
      product_description:
        type: string
      product_line:
        type: string
      product_name:
        type: string
      product_scale:
        type: string
      product_vendor:
        type: string
      quantity_in_stock:
        type: integer
    type: object
  model.ProductLine:
    properties:
      html_description:
        type: string
      image:
        items:
          type: integer
        type: array
      product_line:
        type: string
      text_description:
        type: string
    type: object
  pgtype.Date:
    properties:
      infinityModifier:
        type: integer
      status:
        type: integer
      time:
        type: string
    type: object
info:
  contact:
    email: Martsoftfilmz@gmail.com
    name: Martsoft Inc
  description: This is the API E-Commerce businesses.
  title: Martsoft Inc E-Commerce API 2.0
  version: "1.0"
paths:
  /customers/delete_customer:
    delete:
      description: Deletes a single customer
      parameters:
      - description: customer_number mandatory
        in: query
        name: customer_number
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Deletes a single customer
      tags:
      - Customer
  /customers/get_customer:
    get:
      description: Fetch a single customer
      parameters:
      - description: customer_number mandatory
        in: query
        name: customer_number
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve a single customer
      tags:
      - Customer
  /customers/get_customers:
    get:
      description: Gets all customers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve all customers
      tags:
      - Customer
  /employees/delete_employee:
    delete:
      description: deleted a single Employee
      parameters:
      - description: employee_number mandatory
        in: query
        name: employee_number
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Employee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: deletes a single Employee
      tags:
      - Employees
  /employees/get_employee:
    get:
      description: Fetch a single Employee
      parameters:
      - description: employee_number mandatory
        in: query
        name: employee_number
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Employee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve a single Employee
      tags:
      - Employees
  /employees/get_employees:
    get:
      description: Gets all Employees
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Employee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve all Employees
      tags:
      - Employees
  /offices/delete_office:
    delete:
      description: Deletes a single Office
      parameters:
      - description: office_code mandatory
        in: query
        name: office_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Office'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Deletes a single Office
      tags:
      - Offices
  /offices/get_office:
    get:
      description: Fetch a single Office
      parameters:
      - description: office_code mandatory
        in: query
        name: office_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Office'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve a single Office
      tags:
      - Offices
  /offices/get_offices:
    get:
      description: Gets all Offices
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Office'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve all Offices
      tags:
      - Offices
  /orderDetails/delete_orderDetail:
    delete:
      description: Delete order details
      parameters:
      - description: order_number mandatory
        in: query
        name: order_number
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Delete order details
      tags:
      - Orders
  /orderDetails/get_orderDetail:
    get:
      description: Fetch order details
      parameters:
      - description: order_number mandatory
        in: query
        name: order_number
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve order details
      tags:
      - Orders
  /orderDetails/get_orderDetails:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrderDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve all OrderDetails
      tags:
      - OrderDetails
  /orders/get_orders:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve all Orders
      tags:
      - Orders
  /payments/delete_payment:
    delete:
      description: deletes a Payment
      parameters:
      - description: customer_number mandatory
        in: query
        name: customer_number
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Payment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: deletes a  Payment
      tags:
      - Payments
  /payments/get_payment:
    get:
      description: Fetch a Payment
      parameters:
      - description: customer_number mandatory
        in: query
        name: customer_number
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Payment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve a  Payment
      tags:
      - Payments
  /payments/get_payments:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Payment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve all Payments
      tags:
      - Payments
  /productLines/get_productLines:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProductLine'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve all ProductLines
      tags:
      - ProductLines
  /products/delete_product:
    delete:
      description: Deletes a single Product
      parameters:
      - description: product_code mandatory
        in: query
        name: product_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Deletes a single Product
      tags:
      - Products
  /products/get_product:
    get:
      description: Fetch a single Product
      parameters:
      - description: product_code mandatory
        in: query
        name: product_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve a single Product
      tags:
      - Products
  /products/get_products:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrValidation'
      summary: Retrieve all Payments
      tags:
      - Products
schemes:
- http
swagger: "2.0"
